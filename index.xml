<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Greg Anderson</title>
    <link>https://gavlegoat.github.io/</link>
    <description>Recent content on Greg Anderson</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 18 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://gavlegoat.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://gavlegoat.github.io/about/</link>
      <pubDate>Fri, 09 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gavlegoat.github.io/about/</guid>
      <description>I am an assistant professor in the computer science department at Reed College. My research focuses on the intersection of program analysis and machine learning, especially with an eye toward ensuring the safety of machine learning systems. Specifically, my recent work has explored the use of neurosymbolic programming to develop agents which can interact safely with an environment.
Prior to joining Reed, I earned my PhD at UT Austin&amp;rsquo;s UToPiA and Trishul groups, advised by Isil Dillig and Swarat Chaudhuri.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://gavlegoat.github.io/research/</link>
      <pubDate>Fri, 09 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gavlegoat.github.io/research/</guid>
      <description>My research broadly covers the intersection of programming languages and machine learning. In particular, I am most interested in developing techniques for proving the safety of systems with machine learning components. My early work in this domain focused on using abstraction refinement to prove local robustness properties (PLDI&#39;19). More recently I have worked on incorporating ideas from PL research to develop a framework for deep reinforcement learning with formally guaranteed safety (NeurIPS&#39;20 and ICLR&#39;23).</description>
    </item>
    
    <item>
      <title>Final Project</title>
      <link>https://gavlegoat.github.io/teaching/cs342/final/</link>
      <pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gavlegoat.github.io/teaching/cs342/final/</guid>
      <description>In this project, you will implement an agent that plays the SuperTuxKart ice hockey game mode. You have two options for how to do this: an image-based agent or a state-based agent.
Regardless of which agent you choose, your goal is to train the agent to score as many goals as possible in a 2 vs. 2 tournament against some existing agents.
Note: In contrast to previous homeworks, you may work in groups of up to four students on this assignment.</description>
    </item>
    
    <item>
      <title>Make-Up Homework</title>
      <link>https://gavlegoat.github.io/teaching/cs342/makeup/</link>
      <pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gavlegoat.github.io/teaching/cs342/makeup/</guid>
      <description>In this homework, we will look at character-level language models. These models take a sequence of characters as input and predict the next character.
This assignment, as with all of the homework assignments, should be completed individually without sharing solutions, models, or ideas with other students. See details at the bottom of this page.
Starter Code and Data Starter code for this assignment is available here. The starter code zip for this assignment includes the dataset you will need.</description>
    </item>
    
    <item>
      <title>Homework 5</title>
      <link>https://gavlegoat.github.io/teaching/cs342/homework5/</link>
      <pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gavlegoat.github.io/teaching/cs342/homework5/</guid>
      <description>In this homework, we will implement a neural vision system for an autonomous driving agent in SuperTuxKart.
This assignment, as with all of the homework assignments, should be completed individually without sharing solutions, models, or ideas with other students. See details at the bottom of this page.
Setup and Starter Code Starter code for this assignment is provided here. For this assignment, you will also need to install python bindings for SuperTuxKart &amp;ndash; these are available in the pip package PySuperTuxKart.</description>
    </item>
    
    <item>
      <title>Homework 4</title>
      <link>https://gavlegoat.github.io/teaching/cs342/homework4/</link>
      <pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gavlegoat.github.io/teaching/cs342/homework4/</guid>
      <description>In this homework, we will implement an object detector for the SuperTuxKart simulator. The goal is to look at an image and identify the locations of karts, bombs/projectiles, and pickup items. The dataset is the same as homework 3 and the starting code will look similar. You will need similar data augmentation to what you used in homework 3.
This assignment, as with all of the homework assignments, should be completed individually without sharing solutions, models, or ideas with other students.</description>
    </item>
    
    <item>
      <title>Homework 3</title>
      <link>https://gavlegoat.github.io/teaching/cs342/homework3/</link>
      <pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gavlegoat.github.io/teaching/cs342/homework3/</guid>
      <description>For this homework, we will really tune our SuperTuxKart classifier in order to push the accuracy as high as possible. We will then extend that classifier to label each pixel of the input rather than each input image as a whole.
This assignment, as with all of the homework assignments, should be completed individually without sharing solutions, models, or ideas with other students. See details at the bottom of this page.</description>
    </item>
    
    <item>
      <title>Homework 2</title>
      <link>https://gavlegoat.github.io/teaching/cs342/homework2/</link>
      <pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gavlegoat.github.io/teaching/cs342/homework2/</guid>
      <description>For this homework, you will be classifying images from the SuperTuxKart dataset using a convolutional neural network.
This assignment, as with all of the homework assignments, should be completed individually without sharing solutions, models, or ideas with other students. See details at the bottom of this page.
Starter Code We provide some starter code for this homework here. This zip file contains the following:
bundle.py, a script you can use to zip up your homework for submission.</description>
    </item>
    
    <item>
      <title>Homework 1</title>
      <link>https://gavlegoat.github.io/teaching/cs342/homework1/</link>
      <pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gavlegoat.github.io/teaching/cs342/homework1/</guid>
      <description>In this first homework, you will be training a deep network to classify images from SuperTuxKart.
This assignment, as with all of the homework assignments, should be completed individually without sharing solutions, models, or ideas with other students. See details at the bottom of this page.
Running on Google Colab For this assignment, as well as future assignments, you may want access to a GPU to train your models more quickly.</description>
    </item>
    
    <item>
      <title>Publications</title>
      <link>https://gavlegoat.github.io/publications/</link>
      <pubDate>Fri, 14 Jun 2019 11:06:23 -0500</pubDate>
      
      <guid>https://gavlegoat.github.io/publications/</guid>
      <description>Policy Optimization with Robustness Certificates. Chenxi Yang, Greg Anderson, Swarat Chaudhuri. At SaTML &amp;lsquo;24.
Guiding Safe Exploration with Weakest Preconditions. Greg Anderson, Swarat Chaudhuri, Isil Dillig. At ICLR &amp;lsquo;23. Tool available here.
Neurosymbolic Reinforcement Learning with Formally Verified Exploration. Greg Anderson, Abhinav Verma, Isil Dillig, Swarat Chaudhuri. At NeurIPS &amp;lsquo;20. Tool available here.
Optimization and Abstraction: A Synergistic Approach for Analyzing Neural Network Robustness. Greg Anderson, Shankara Pailoor, Isil Dillig, and Swarat Chaudhuri.</description>
    </item>
    
  </channel>
</rss>
